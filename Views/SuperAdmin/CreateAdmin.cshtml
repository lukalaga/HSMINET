@model HSMINET.Models.Registration

@{
    ViewData["Title"] = "Register Admin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<form asp-action="CreateAdmin" asp-controller="SuperAdmin" method="post">
    <div class="panel panel-default">
        <div class="panel-heading">Create Admin</div>
        <div class="panel-body">

            @if (TempData["MessageRegistration"] != null)
            {
                <p class="alert alert-success" id="successMessage">@TempData["MessageRegistration"]</p>
            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-lg-6">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = 40, @onkeypress = "return onlyspecchar(event);" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-lg-6">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @maxlength = 50 })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="clearfix"></div>
                    <div class="col-lg-6" style="margin-top:20px;">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.RadioButtonFor(model => model.Gender, "M") @Html.Label("", "Male")
                        @Html.RadioButtonFor(model => model.Gender, "F") @Html.Label("", "Female")
                        <br />
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @maxlength = 20, @onkeypress = "return onlyspecchar(event);", @onblur = "CheckUsernameExists();" })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @maxlength = 30, })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label manadatory" })
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <div class="col-lg-4">
                        <input type="submit" value="Create User" class="btn btn-success" />
                        @Html.ActionLink("Clear", "Registration", "Registration", null, new { @class = "btn btn-danger" })

                        @Html.ActionLink("All Users", "Users", "AllUsers", null, new { @class = "btn btn-info" })
                    </div>
                </div>
            }
        </div>
    </div>
</form>
@section Scripts {

    <script>

    function CheckUsernameExists() {
        var url = '@Url.Content("~/")' + "Registration/CheckUserNameExists";
        var source = "#Username";
        $.post(url, { Username: $(source).val() }, function (data) {
            if (data) {
                $(source).val('');
                alert("Username Already Used try unique one!");
            }
            else {

            }
        });
    }

    function onlyspecchar(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            var txt = String.fromCharCode(charCode)
        if ((txt.match(/^[a-zA-Z\b. ]+$/)) || (txt.match(/^[0-9]+$/)) || (charCode == 64) || (charCode == 45) || (charCode == 46) || (charCode == 95) || (charCode == 41)) {
            return true;
        }
        return false;
    }
    </script>
}